lib = {  path = "Source/lib.rs" }

[dependencies]
document-features = { version = "0.2", optional = true }
egui = { version = "0.31.0", default-features = false, features = [ "bytemuck", "log" ] }
egui_glow = { package = "egui_glow_tao", version = "0.23.0", path = "../egui_glow", optional = true, default-features = false }
glow = { version = "0.16", optional = true }
log = { version = "0.4", features = [ "std" ] }
ron = { version = "0.8", optional = true, features = [ "integer128" ] }
serde = { version = "1", optional = true, features = [ "derive" ] }

[dependencies.thiserror]
workspace = true

[features]
__screenshot = [ ]
default = [ "default_fonts", "glow" ]
default_fonts = [ "egui/default_fonts" ]
glow = [
  "dep:glow",
  "dep:egui_glow",
  "dep:glutin",
  "dep:glutin-winit"
]
persistence = [
  "directories-next",
  "egui-winit/serde",
  "egui/persistence",
  "ron",
  "serde"
]
puffin = [ "dep:puffin", "egui_glow?/puffin" ]
web_screen_reader = [ "tts" ]

[package]
authors = [ "Emil Ernerfeldt <emil.ernerfeldt@gmail.com>" ]
categories = [ "gui", "game-development" ]
description = "egui framework - write GUI apps that compiles to web and/or natively"
edition = "2024"
homepage = "https://github.com/emilk/egui/tree/master/crates/eframe"
include = [
  "../LICENSE-APACHE",
  "../LICENSE-MIT",
  "**/*.rs",
  "Cargo.toml",
  "data/icon.png"
]
keywords = [ "egui", "gui", "gamedev" ]
license-file = "LICENSE"
name = "eframe_tao"
readme = "README.md"
repository = "https://github.com/emilk/egui/tree/master/crates/eframe"
rust-version = "1.85.0"
version = "0.23.0"

[package.metadata]

[package.metadata.docs]

[package.metadata.docs.rs]
all-features = true
targets = [ "x86_64-unknown-linux-gnu", "wasm32-unknown-unknown" ]

[target]

[target.'cfg(any(target_os = "macos"))']

[target.'cfg(any(target_os = "macos"))'.dependencies]
cocoa = "0.26.0"
objc = "0.2.7"

[target.'cfg(any(target_os = "windows"))']

[target.'cfg(any(target_os = "windows"))'.dependencies]
winapi = "0.3.9"

[target.'cfg(not(target_arch = "wasm32"))']

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
directories-next = { version = "2", optional = true }
egui-winit = { package = "egui-tao", version = "0.23.0", path = "../egui-winit", default-features = false, features = [ "clipboard", "links" ] }
glutin = { version = "0.32", optional = true }
glutin-winit = { package = "glutin_tao", version = "0.33.0", git = "https://github.com/tauri-apps/glutin", branch = "0.31", optional = true }
image = { version = "0.25", default-features = false, features = [ "png" ] }
pollster = { version = "0.4", optional = true }
puffin = { version = "0.19", optional = true }
raw-window-handle = { version = "0.6.2" }
winit = { package = "tao", version = "0.19.1" }

[target.'cfg(target_arch = "wasm32")']

[target.'cfg(target_arch = "wasm32")'.dependencies]
bytemuck = "1.21"
js-sys = "0.3"
percent-encoding = "2.3"
raw-window-handle = { version = "0.6.2", optional = true }
tts = { version = "0.26", optional = true, default-features = false }
wasm-bindgen = "0.2.100"
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3.77", features = [
  "BinaryType",
  "Blob",
  "Clipboard",
  "ClipboardEvent",
  "CompositionEvent",
  "console",
  "CssStyleDeclaration",
  "DataTransfer",
  "DataTransferItem",
  "DataTransferItemList",
  "Document",
  "DomRect",
  "DragEvent",
  "Element",
  "Event",
  "EventListener",
  "EventTarget",
  "ExtSRgb",
  "File",
  "FileList",
  "FocusEvent",
  "HtmlCanvasElement",
  "HtmlElement",
  "HtmlInputElement",
  "InputEvent",
  "KeyboardEvent",
  "Location",
  "MediaQueryList",
  "MediaQueryListEvent",
  "MouseEvent",
  "Navigator",
  "Performance",
  "Storage",
  "Touch",
  "TouchEvent",
  "TouchList",
  "WebGl2RenderingContext",
  "WebglDebugRendererInfo",
  "WebGlRenderingContext",
  "WheelEvent",
  "Window"
] }
