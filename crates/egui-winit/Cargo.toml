[dependencies]
document-features = { version = "0.2", optional = true }
egui = { version = "0.31.0", default-features = false, features = [ "log" ] }
log = { version = "0.4", features = [ "std" ] }
puffin = { version = "0.19", optional = true }
raw-window-handle = "0.6.2"
serde = { version = "1.0", optional = true, features = [ "derive" ] }
webbrowser = { version = "1.0.3", optional = true }
winit = { package = "tao", version = "0.19.1", default-features = false }

[features]
bytemuck = [ "egui/bytemuck" ]
clipboard = [ "arboard", "smithay-clipboard" ]
default = [ "clipboard", "links" ]
links = [ "webbrowser" ]
puffin = [ "dep:puffin" ]
serde = [ "egui/serde", "dep:serde" ]

[lib]
path = "Source/lib.rs"

[package]
authors = [ "Emil Ernerfeldt <emil.ernerfeldt@gmail.com>" ]
categories = [ "gui", "game-development" ]
description = "Bindings for using egui with winit"
edition = "2024"
homepage = "https://github.com/emilk/egui/tree/master/crates/egui-winit"
include = [
  "../LICENSE-APACHE",
  "../LICENSE-MIT",
  "**/*.rs",
  "Cargo.toml"
]
keywords = [ "winit", "egui", "gui", "gamedev" ]
license-file = "LICENSE"
name = "egui-tao"
readme = "README.md"
repository = "https://github.com/emilk/egui/tree/master/crates/egui-winit"
rust-version = "1.85.0"
version = "0.23.0"

[package.metadata]

[package.metadata.docs]

[package.metadata.docs.rs]
all-features = true

[target]

[target.'cfg(any(target_os="linux", target_os="dragonfly", target_os="freebsd", target_os="netbsd", target_os="openbsd"))']

[target.'cfg(any(target_os="linux", target_os="dragonfly", target_os="freebsd", target_os="netbsd", target_os="openbsd"))'.dependencies]
smithay-clipboard = { version = "0.7.2", optional = true }

[target.'cfg(not(target_arch="wasm32"))']

[target.'cfg(not(target_arch="wasm32"))'.dependencies]
instant = { version = "0.1" }

[target.'cfg(not(target_os = "android"))']

[target.'cfg(not(target_os = "android"))'.dependencies]
arboard = { version = "3.4", optional = true, default-features = false }

[target.'cfg(target_arch="wasm32")']

[target.'cfg(target_arch="wasm32")'.dependencies]
instant = { version = "0.1", features = [ "wasm-bindgen" ] }
